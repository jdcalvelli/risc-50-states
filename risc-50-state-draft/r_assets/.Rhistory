install.packages(swirl)
install.packages("swirl")
library('swirl')
swirl()
5+7
x <- 5 + 7
x
y <- x-3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
swirl()
5 + 7
swirl
swirl()
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files())
args(list.files)
old.dir <-  dir()
old.dir <- getwd()
dir.create(testdir)
dir.create('test.dir')
dir.create('testdir')
setwd(testdir)
setwd('testdir')
file.create('mytest.R')
ls()
list.files()
file.exists(mytest.R)
file.exists('mytest.R')
file.info('mytest.R')
?file.rename
file.rename('mytest.R', 'mytest2.R')
file.copy('mytest2.R', 'mytest3.R')
file.path('mytest3.R')
?file.path
file.path('folder1', 'folder2')
?dir.create
dir.create(file.path('testdir2', 'testdir3'))
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd('old.dir')
setwd(old.dir)
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
swirl()
swirl()
swirl
library(swirl)
swirl()
remove.packages(plyr)
remove.packages('plyr')
install.packages()
install.packages('leaflet')
#LIBRARIES
library(tidyverse)
library(leaflet)
library(leaflet.extras)
library(sf)
library(htmltools)
#LOAD IN SHAPEFILE
states_shp <- st_read("tl_2021_us_state/tl_2021_us_state.shp")
#LOAD IN DATA
state_grades <- read.csv("state_report_final.csv")
#CLEANING DATA
state_grades <- filter(state_grades, state_grades$State != "")
state_grades_simplified <- state_grades[c("State", "Final.Grade", "Reasoning..Presentable.")]
state_grades_simplified$State[state_grades_simplified$State == "California "] <- "California"
state_grades_simplified$State[state_grades_simplified$State == "D.C"] <- "District of Columbia"
state_grades_simplified$Final.Grade.Factor <- as.factor(state_grades_simplified$Final.Grade)
state_grades_simplified <- rename(state_grades_simplified, NAME = State)
state_grades_simplified_shp <- inner_join(states_shp, state_grades_simplified)
#MAP CREATION
#adding bins and color palette
bins <- as.numeric(as.factor(c("F", "D-", "D", "D+", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+")))
pal <- colorBin(c( '#98b01e', '#b09d1e', '#b0621e', '#b03b1e', '#b01e1e'),
domain = state_grades_simplified_shp$Final.Grade.Factor,
bins = bins)
#creating labels
popups <- sprintf(
'<div style = "text-align: center;"> %s </div>
<div style = "text-align: center; font-weight: bold;"> %s </div>
<div> %s </div>',
state_grades_simplified_shp$NAME,
state_grades_simplified_shp$Final.Grade,
state_grades_simplified_shp$Reasoning..Presentable.
) %>%
lapply(htmltools::HTML)
#making actual map
leaf <- leaflet(state_grades_simplified_shp,
options = leafletOptions(
maxZoom = 7,
minZoom = 2,
)) %>%
setView(-96, 37.8, 4) %>%
#add basemap tiles
addProviderTiles(providers$Stamen.Toner) %>%
#adding suspendScroll
suspendScroll(
wakeTime = 200,
sleepTime = 400,
hoverToWake = TRUE,
sleepNote = FALSE
)
#adding polygons
leaf %>% addPolygons(
fillColor = ~pal(as.numeric(Final.Grade.Factor)),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
popup = popups
)
#leaflet for r documentation: https://rstudio.github.io/leaflet/
setwd("~/Desktop/risc-50-states")
#LIBRARIES
library(tidyverse)
library(leaflet)
library(leaflet.extras)
library(sf)
library(htmltools)
#LOAD IN SHAPEFILE
states_shp <- st_read("tl_2021_us_state/tl_2021_us_state.shp")
#LOAD IN DATA
state_grades <- read.csv("state_report_final.csv")
#CLEANING DATA
state_grades <- filter(state_grades, state_grades$State != "")
state_grades_simplified <- state_grades[c("State", "Final.Grade", "Reasoning..Presentable.")]
state_grades_simplified$State[state_grades_simplified$State == "California "] <- "California"
state_grades_simplified$State[state_grades_simplified$State == "D.C"] <- "District of Columbia"
state_grades_simplified$Final.Grade.Factor <- as.factor(state_grades_simplified$Final.Grade)
state_grades_simplified <- rename(state_grades_simplified, NAME = State)
state_grades_simplified_shp <- inner_join(states_shp, state_grades_simplified)
#MAP CREATION
#adding bins and color palette
bins <- as.numeric(as.factor(c("F", "D-", "D", "D+", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+")))
pal <- colorBin(c( '#98b01e', '#b09d1e', '#b0621e', '#b03b1e', '#b01e1e'),
domain = state_grades_simplified_shp$Final.Grade.Factor,
bins = bins)
#creating labels
popups <- sprintf(
'<div style = "text-align: center;"> %s </div>
<div style = "text-align: center; font-weight: bold;"> %s </div>
<div> %s </div>',
state_grades_simplified_shp$NAME,
state_grades_simplified_shp$Final.Grade,
state_grades_simplified_shp$Reasoning..Presentable.
) %>%
lapply(htmltools::HTML)
#making actual map
leaf <- leaflet(state_grades_simplified_shp,
options = leafletOptions(
maxZoom = 7,
minZoom = 2,
)) %>%
setView(-96, 37.8, 4) %>%
#add basemap tiles
addProviderTiles(providers$Stamen.Toner) %>%
#adding suspendScroll
suspendScroll(
wakeTime = 200,
sleepTime = 400,
hoverToWake = TRUE,
sleepNote = FALSE
)
#adding polygons
leaf %>% addPolygons(
fillColor = ~pal(as.numeric(Final.Grade.Factor)),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
popup = popups
)
#leaflet for r documentation: https://rstudio.github.io/leaflet/
library(tidyverse)
library(leaflet)
library(leaflet.extras)
library(sf)
library(htmltools)
states_shp <- st_read("tl_2021_us_state/tl_2021_us_state.shp")
setwd("~/Desktop/risc-50-states/r_assets")
#LIBRARIES
library(tidyverse)
library(leaflet)
library(leaflet.extras)
library(sf)
library(htmltools)
#LOAD IN SHAPEFILE
states_shp <- st_read("tl_2021_us_state/tl_2021_us_state.shp")
#LOAD IN DATA
state_grades <- read.csv("state_report_final.csv")
#CLEANING DATA
state_grades <- filter(state_grades, state_grades$State != "")
state_grades_simplified <- state_grades[c("State", "Final.Grade", "Reasoning..Presentable.")]
state_grades_simplified$State[state_grades_simplified$State == "California "] <- "California"
state_grades_simplified$State[state_grades_simplified$State == "D.C"] <- "District of Columbia"
state_grades_simplified$Final.Grade.Factor <- as.factor(state_grades_simplified$Final.Grade)
state_grades_simplified <- rename(state_grades_simplified, NAME = State)
state_grades_simplified_shp <- inner_join(states_shp, state_grades_simplified)
#MAP CREATION
#adding bins and color palette
bins <- as.numeric(as.factor(c("F", "D-", "D", "D+", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+")))
pal <- colorBin(c( '#98b01e', '#b09d1e', '#b0621e', '#b03b1e', '#b01e1e'),
domain = state_grades_simplified_shp$Final.Grade.Factor,
bins = bins)
#creating labels
popups <- sprintf(
'<div style = "text-align: center;"> %s </div>
<div style = "text-align: center; font-weight: bold;"> %s </div>
<div> %s </div>',
state_grades_simplified_shp$NAME,
state_grades_simplified_shp$Final.Grade,
state_grades_simplified_shp$Reasoning..Presentable.
) %>%
lapply(htmltools::HTML)
#making actual map
leaf <- leaflet(state_grades_simplified_shp,
options = leafletOptions(
maxZoom = 7,
minZoom = 2,
)) %>%
setView(-96, 37.8, 4) %>%
#add basemap tiles
addProviderTiles(providers$Stamen.Toner) %>%
#adding suspendScroll
suspendScroll(
wakeTime = 200,
sleepTime = 400,
hoverToWake = TRUE,
sleepNote = FALSE
)
#adding polygons
leaf %>% addPolygons(
fillColor = ~pal(as.numeric(Final.Grade.Factor)),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
popup = popups
)
#leaflet for r documentation: https://rstudio.github.io/leaflet/
#LIBRARIES
library(tidyverse)
library(leaflet)
library(leaflet.extras)
library(sf)
library(htmltools)
#LOAD IN SHAPEFILE
states_shp <- st_read("tl_2021_us_state/tl_2021_us_state.shp")
#LOAD IN DATA
state_grades <- read.csv("state_report_final.csv")
#CLEANING DATA
state_grades <- filter(state_grades, state_grades$State != "")
state_grades_simplified <- state_grades[c("State", "Final.Grade", "Reasoning..Presentable.")]
state_grades_simplified$State[state_grades_simplified$State == "California "] <- "California"
state_grades_simplified$State[state_grades_simplified$State == "D.C"] <- "District of Columbia"
state_grades_simplified$Final.Grade.Factor <- as.factor(state_grades_simplified$Final.Grade)
state_grades_simplified <- rename(state_grades_simplified, NAME = State)
state_grades_simplified_shp <- inner_join(states_shp, state_grades_simplified)
#MAP CREATION
#adding bins and color palette
bins <- as.numeric(as.factor(c("F", "D-", "D", "D+", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+")))
pal <- colorBin(c( '#98b01e', '#b09d1e', '#b0621e', '#b03b1e', '#b01e1e'),
domain = state_grades_simplified_shp$Final.Grade.Factor,
bins = bins)
#creating labels
popups <- sprintf(
'<div style = "text-align: center;"> %s </div>
<div style = "text-align: center; font-weight: bold;"> %s </div>
<div> %s </div>',
state_grades_simplified_shp$NAME,
state_grades_simplified_shp$Final.Grade,
state_grades_simplified_shp$Reasoning..Presentable.
) %>%
lapply(htmltools::HTML)
#making actual map
leaf <- leaflet(state_grades_simplified_shp,
options = leafletOptions(
maxZoom = 7,
minZoom = 2,
)) %>%
setView(-96, 37.8, 4) %>%
#add basemap tiles
addProviderTiles(providers$Stamen.Toner) %>%
#adding suspendScroll
suspendScroll(
wakeTime = 200,
sleepTime = 400,
hoverToWake = TRUE,
sleepNote = FALSE
)
#adding polygons
leaf %>% addPolygons(
fillColor = ~pal(as.numeric(Final.Grade.Factor)),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
popup = popups
)
#leaflet for r documentation: https://rstudio.github.io/leaflet/
